{"version":3,"sources":["view.js","Add.js","App.js","reportWebVitals.js","index.js"],"names":["View","this","props","todos","map","current","id","task","complete","Table","striped","bordered","hover","buildRows","React","Component","Add","state","description","completed","toastr","options","closeButton","debug","extendedTimeOut","hideDuration","hideEasing","hideMethod","newestOnTop","onclick","positionClass","preventDuplicates","progressBar","showDuration","showEasing","showMethod","timeOut","clear","event","newState","target","name","value","setState","preventDefault","onsubmit","success","Form","onSubmit","e","submitHandler","Group","controlId","Label","Control","type","onChange","handleChange","placeholder","Check","checked","label","Button","variant","App","listItems","listContents","localStorage","getItem","JSON","parse","listItem","concat","setItem","stringify","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","to","Container","path","updateListItems","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4ba0c0a.chunk.js","sourcesContent":["import React from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport './App.css';\r\n\r\nclass View extends React.Component {\r\n  \r\n  buildRows() {\r\n    return this.props.todos.map((current) => (\r\n      <tr key={current.id}>\r\n        <td>\r\n          {current.id}\r\n        </td>\r\n        <td>\r\n          {current.task}\r\n        </td>\r\n        <td>\r\n          {current.complete ? \"yes\" : \"no\"}\r\n        </td>\r\n      </tr>\r\n    )\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Task</th>\r\n              <th>complete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.buildRows()}\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\nexport default View;\r\n","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport toastr from 'toastr';\r\nimport 'toastr/build/toastr.min.css'\r\n\r\n\r\nclass Add extends React.Component {\r\n  constructor(props){\r\n    super (props)\r\n    this.state={\r\n      id: 0,\r\n      description: \"\",\r\n      completed: false\r\n    }\r\n    toastr.options = {\r\n        closeButton: true,\r\n        debug: false,\r\n        extendedTimeOut: \"1000\",\r\n        hideDuration: \"1000\",\r\n        hideEasing: \"linear\",\r\n        hideMethod: \"fadeOut\",\r\n        newestOnTop: false,\r\n        onclick: null,\r\n        positionClass: \"toast-top-full-width\",\r\n        preventDuplicates: true,\r\n        progressBar: true,\r\n        showDuration: \"300\",\r\n        showEasing: \"swing\",\r\n        showMethod: \"fadeIn\",\r\n        timeOut: \"5000\",\r\n      };\r\n      toastr.clear();\r\n    }\r\n\r\n  handleChange(event) {\r\n    const newState = {};\r\n    if (event.target.name === 'completed') {\r\n      newState[event.target.name] = !this.state.completed;\r\n    } else {\r\n      newState[event.target.name] = event.target.value;\r\n    }\r\n    this.setState(newState);\r\n  }\r\n\r\n  submitHandler(event) {\r\n    event.preventDefault();\r\n    this.props.onsubmit(this.state.id, this.state.description, this.state.completed);\r\n    toastr.success(\"Item added\");\r\n    this.setState({\r\n      id: 0,\r\n      description: \"\",\r\n      completed: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Form onSubmit={(e) => this.submitHandler(e)} >\r\n          <Form.Group controlId=\"taskID\">\r\n            <Form.Label>Task ID</Form.Label>\r\n            <Form.Control name=\"id\" type=\"number\" value={this.state.id} onChange={(e) => this.handleChange(e)} />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"taskDescription\">\r\n            <Form.Label>Description</Form.Label>\r\n            <Form.Control name=\"description\" type=\"text\" value={this.state.description} placeholder=\"Description\" onChange={(e) => this.handleChange(e)} />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"complete\">\r\n            <Form.Check name=\"completed\" type=\"checkbox\" checked={this.state.completed} label=\"Complete\" onChange={(e) => this.handleChange(e)} />\r\n          </Form.Group>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit\r\n  </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Add;\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Container from 'react-bootstrap/Container';\nimport './App.css';\nimport View from './view'\nimport Add from './Add'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\n\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      listItems: [{ id: 1, task: \"make static data\", complete: false },\n      { id: 2, task: \"make dynamic data\", complete: false }]\n    }\n  }\n\n  componentDidMount() {\n    const listContents = localStorage.getItem(\"list\");\n    this.setState(\n      { listItems: JSON.parse(listContents) || [] }\n    )\n  }\n\n  updateListItems(id, task, complete) {\n    const listItem = { id, task, complete }\n    this.setState((state) => ({\n      listItems: state.listItems.concat(listItem)\n    }), () => localStorage.setItem(\"list\", JSON.stringify(this.state.listItems)))\n  }\n\n  render() {\n    return (\n      <Router>\n        <Navbar bg=\"light\" expand=\"md\">\n          <Navbar.Brand>Todo List</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Link className=\"nav-link\" to=\"/\">View</Link>\n              <Link className=\"nav-link\" to=\"/add\">Add</Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container>\n        <Switch>\n            <Route path=\"/add\">\n              <Add onsubmit={(id, description, completed) => this.updateListItems(id, description, completed)} />\n            </Route>\n            <Route exact path=\"/\">\n              <View todos={this.state.listItems} />\n            </Route>\n            <Route path=\"/\">\n              Error: 404 not found\n            </Route>\n          </Switch>\n        </Container>\n      </Router>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}